name: Build

on:
  workflow_call:

jobs:
  download:
    name: Download (Spark ${{ matrix.spark-version }} Hadoop ${{ matrix.hadoop-version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # use spark versions from test-integration.yaml workflow
        include:
          - spark-version: '3.0.3'
            hadoop-version: '2.7'
          - spark-version: '3.1.3'
            hadoop-version: '2.7'
          - spark-version: '3.2.4'
            hadoop-version: '2.7'
          - spark-version: '3.3.4'
            hadoop-version: '3'
          - spark-version: '3.4.4'
            hadoop-version: '3'
          - spark-version: '3.5.5'
            hadoop-version: '3'
          - spark-version: '4.0.0-preview2'
            hadoop-version: '3'

    steps:
      - name: Cache Spark Binaries
        uses: actions/cache@v4
        with:
          path: ~/spark
          key: ${{ runner.os }}-spark-binaries-${{ matrix.spark-version }}-${{ matrix.scala-compat-version }}

      - name: Setup Spark Binaries
        env:
          SPARK_PACKAGE: spark-${{ matrix.spark-version }}/spark-${{ matrix.spark-version }}-bin-hadoop${{ matrix.hadoop-version }}.tgz
        run: |
          if [[ ! -e ~/spark ]]
          then
            wget --progress=dot:giga "https://www.apache.org/dyn/closer.lua/spark/${SPARK_PACKAGE}?action=download" -O - | tar -xzC "${{ runner.temp }}"
            archive=$(basename "${SPARK_PACKAGE}") bash -c "mv -v "${{ runner.temp }}/\${archive/%.tgz/}" ~/spark"
          fi
        shell: bash

      - name: Upload Spark Binaries
        uses: actions/upload-artifact@v4
        with:
          name: Spark-Binaries-${{ matrix.spark-version }}-${{ matrix.hadoop-version }}
          path: ~/spark

