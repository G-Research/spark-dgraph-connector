name: CI

on: [push, pull_request_target]

jobs:
  build-and-test:
    name: Build and Test (Dgraph ${{ matrix.dgraph-version }} and Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name != github.repository

    strategy:
      fail-fast: false
      matrix:
        dgraph-version: [20.03.3, 20.03.4, 20.07.0]
        python-version: [3.6]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r python/requirements.txt
        pip install pytest

    - name: Build and Test
      env:
        DGRAPH_TEST_CLUSTER_VERSION: ${{ matrix.dgraph-version }}
      run: mvn --batch-mode test

    - name: PyTest
      env:
        DGRAPH_TEST_CLUSTER_VERSION: ${{ matrix.dgraph-version }}
        PYTHONPATH: python:python/test
      run: |
        mkdir -p target/surefire-reports
        python -m pytest python/test --junit-xml target/surefire-reports/pytest.xml

    - name: Generate Unit Test Report
      if: failure()
      run: mvn --batch-mode surefire-report:report-only

    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Unit Test Results (Dgraph ${{ matrix.dgraph-version }} and Python ${{ matrix.python-version }})
        path: |
          target/surefire-reports/*.xml
          !target/surefire-reports/TEST-org.scalatest*.xml
          target/site/surefire-report.html

  publish-test-results:
    name: "Publish Unit Tests Results"
    needs: build-and-test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@master
        with:
          check_name: Unit Test Results
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: "artifacts/**/*.xml"
          log_level: DEBUG
