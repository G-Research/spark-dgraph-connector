name: 'Test Python'
author: 'EnricoMi'
description: 'A GitHub Action that tests Python spark-dgraph-connector'

inputs:
  spark-version:
    description: Spark version, e.g. 3.4.0 or 3.4.0-SNAPSHOT
    required: true
  scala-version:
    description: Scala version, e.g. 2.12.15
    required: true
  spark-compat-version:
    description: Spark compatibility version, e.g. 3.4
    required: true
  dgraph-version:
    description: Dgraph server version, e.g. 22.0.0
    required: true
  python-version:
    description: Python version, e.g. 3.8 or 3.8.0
    required: true

runs:
  using: 'composite'
  steps:
    - name: Set versions in pom.xml
      run: |
        ./set-version.sh ${{ inputs.spark-version }} ${{ inputs.scala-version }}
        git diff
      shell: bash

    - name: Fetch Binaries Artifact
      uses: actions/download-artifact@v3
      with:
        name: Binaries-${{ inputs.spark-compat-version }}-${{ inputs.scala-version }}
        path: .

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-mvn-test-${{ inputs.spark-version }}-${{ inputs.scala-version }}-${{ hashFiles('pom.xml') }}
        restore-keys: ${{ runner.os }}-mvn-test-${{ inputs.spark-version }}-${{ inputs.scala-version }}-

    - name: Setup JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'zulu'

    - name: Start Dgraph cluster
      id: dgraph
      env:
        DGRAPH_TEST_CLUSTER_VERSION: ${{ inputs.dgraph-version }}
      run: |
        cp -v dgraph-instance.*.sh /tmp/
        echo "::set-output name=docker::$(/tmp/dgraph-instance.background.sh)"
        sleep 10
        if [[ "${{ inputs.dgraph-version }}" != "20.03."* ]]
        then
          /tmp/dgraph-instance.drop-all.sh
        fi
        /tmp/dgraph-instance.schema.sh
        /tmp/dgraph-instance.insert.sh
      shell: bash

    - name: Cache Pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-test-${{ inputs.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-test-${{ inputs.python-version }}-

    - name: Setup Python ${{ inputs.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r python/requirements.txt
        pip install pytest
      shell: bash

    - name: Python Test
      env:
        DGRAPH_TEST_CLUSTER_VERSION: ${{ inputs.dgraph-version }}
        PYTHONPATH: python:python/test
      run: |
        mkdir -p target/surefire-reports
        python -m pytest python/test --junit-xml target/surefire-reports/pytest.xml
      shell: bash

    - name: Upload Unit Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Unit Test Results (Spark ${{ inputs.spark-version }}, Scala ${{ inputs.scala-version}}, Dgraph ${{ inputs.dgraph-version }}, Python ${{ inputs.python-version }})
        path: |
          target/surefire-reports/*.xml
          !target/surefire-reports/TEST-org.scalatest*.xml
          target/site/surefire-report.html

branding:
  icon: 'check-circle'
  color: 'green'
